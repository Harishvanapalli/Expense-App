// <auto-generated />
using System;
using Data_Access_Layer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data_Access_Layer.Migrations
{
    [DbContext(typeof(ExpenseDbContext))]
    [Migration("20240628110533_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data_Access_Layer.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ExpenseGroupID")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Paid_by")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Split_among")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseID");

                    b.HasIndex("ExpenseGroupID");

                    b.HasIndex("GroupId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Data_Access_Layer.Models.ExpenseGroup", b =>
                {
                    b.Property<int>("ExpenseGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseGroupID"));

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Expenses")
                        .HasColumnType("float");

                    b.Property<string>("Group_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Members")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExpenseGroupID");

                    b.ToTable("ExpenseGroups");
                });

            modelBuilder.Entity("Data_Access_Layer.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Password = "Harish@123",
                            Role = "Administrator",
                            Username = "harishvanapalli9@gmail.com"
                        },
                        new
                        {
                            UserID = 2,
                            Password = "Ravi@123",
                            Role = "Administrator",
                            Username = "ravivanapalli9@gmail.com"
                        },
                        new
                        {
                            UserID = 3,
                            Password = "Dileep@123",
                            Role = "User",
                            Username = "dileepthondupu8@gmail.com"
                        },
                        new
                        {
                            UserID = 4,
                            Password = "Mohan@123",
                            Role = "User",
                            Username = "mohanuchula10@gmail.com"
                        },
                        new
                        {
                            UserID = 5,
                            Password = "Ramesh@123",
                            Role = "User",
                            Username = "rameshupparapalli108@gmail.com"
                        },
                        new
                        {
                            UserID = 6,
                            Password = "Naveen@123",
                            Role = "User",
                            Username = "naveenbuddha9@gmail.com"
                        });
                });

            modelBuilder.Entity("Data_Access_Layer.Models.Expense", b =>
                {
                    b.HasOne("Data_Access_Layer.Models.ExpenseGroup", null)
                        .WithMany("GroupExpenses")
                        .HasForeignKey("ExpenseGroupID");

                    b.HasOne("Data_Access_Layer.Models.ExpenseGroup", null)
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data_Access_Layer.Models.ExpenseGroup", b =>
                {
                    b.Navigation("GroupExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
